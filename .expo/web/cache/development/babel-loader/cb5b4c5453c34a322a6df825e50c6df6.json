{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\programacao_mobile\\\\app_cadastro\\\\componentes\\\\ViewScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Style from \"./style\";\nimport database from \"../firebase\";\nimport App, { screen } from \"../App\";\nimport { Ionicons } from '@expo/vector-icons';\n\nfunction ViewScreen(_ref) {\n  var _this = this;\n\n  var screenHook = _ref.screenHook;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modal = _useState4[0],\n      setModal = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      id = _useState6[0],\n      setId = _useState6[1];\n\n  useEffect(function () {\n    database.collection(\"users\").onSnapshot(function (query) {\n      var list = [];\n      query.forEach(function (doc) {\n        list.push(_objectSpread(_objectSpread({}, doc.data()), {}, {\n          id: doc.id\n        }));\n      });\n      setUser(list);\n    });\n  }, []);\n\n  function gotoEdit(id) {\n    setId(id);\n    setModal(true);\n  }\n\n  if (!modal) {\n    return React.createElement(View, {\n      style: Style.parentView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: Style.viewHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: Style.viewHeaderTxt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, \"Tela de visualiza\\xE7\\xE3o\"), React.createElement(TouchableOpacity, {\n      style: Style.btnLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, React.createElement(Ionicons, {\n      name: \"log-out-outline\",\n      size: 25,\n      style: Style.logoutIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }))), React.createElement(View, {\n      style: Style.backgroundView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: Style.scrollViewContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }\n    }, React.createElement(ScrollView, {\n      style: Style.scrollView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 24\n      }\n    }, user.map(function (val) {\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return gotoEdit(val.id);\n        },\n        key: val.id,\n        style: Style.scrollViewCell,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: Style.scrollViewCellTxt,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 41\n        }\n      }, val[\"username\"]), React.createElement(Text, {\n        style: Style.scrollViewCellTxt,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 41\n        }\n      }, val[\"name\"]), React.createElement(Text, {\n        style: Style.scrollViewCellTxt,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 41\n        }\n      }, val[\"password\"]));\n    }))), React.createElement(TouchableOpacity, {\n      style: Style.btnNavigateView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 20\n      }\n    }, React.createElement(Text, {\n      style: Style.btnNavigateTxt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, \"Cadastrar usu\\xE1rios\"))));\n  } else {\n    return React.createElement(View, {\n      style: Style.parentView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: Style.viewHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: Style.viewHeaderTxt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, \" Tela de Edi\\xE7\\xE3o\")), React.createElement(View, {\n      style: Style.backgroundView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: Style.userInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, user.map(function (val) {\n      if (val.id == id) {\n        return React.createElement(View, {\n          style: Style.modalInfoView,\n          key: val.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          style: Style.labelModalInfo,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 45\n          }\n        }, \" Dados atuais: \"), React.createElement(Text, {\n          style: Style.modalInfoViewTxt,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 45\n          }\n        }, \"Nome: \" + val[\"name\"]), React.createElement(Text, {\n          style: Style.modalInfoViewTxt,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 45\n          }\n        }, \"Senha: \" + val[\"password\"]));\n      }\n    }))));\n  }\n}\n\nexport default ViewScreen;","map":{"version":3,"sources":["D:/programacao_mobile/app_cadastro/componentes/ViewScreen.js"],"names":["React","useState","useEffect","Style","database","App","screen","Ionicons","ViewScreen","screenHook","user","setUser","modal","setModal","id","setId","collection","onSnapshot","query","list","forEach","doc","push","data","gotoEdit","parentView","viewHeader","viewHeaderTxt","btnLogout","logoutIcon","backgroundView","scrollViewContainer","scrollView","map","val","scrollViewCell","scrollViewCellTxt","btnNavigateView","btnNavigateTxt","userInfo","modalInfoView","labelModalInfo","modalInfoViewTxt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {View, Text, Touchable, TouchableOpacity, ScrollView, SafeAreaView} from 'react-native';\r\nimport Style from './style';\r\nimport database from '../firebase';\r\nimport App, {screen} from '../App';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nfunction ViewScreen({screenHook}){\r\n\r\n    const [user, setUser] = useState([]);\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [id, setId] = useState('');\r\n  \r\n  useEffect(()=>{\r\n\r\n    database.collection(\"users\").onSnapshot((query)=>{\r\n      const list = [];\r\n\r\n      query.forEach((doc)=>{\r\n        list.push({...doc.data(), id: doc.id});\r\n      })\r\n      setUser(list);\r\n    })\r\n    \r\n  },[])\r\n\r\n  function gotoEdit(id){\r\n      \r\n    setId(id);\r\n    setModal(true);\r\n  \r\n  }\r\n\r\n\r\n    if(!modal){\r\n        return(\r\n            <View style={Style.parentView}>\r\n    \r\n                <View style={Style.viewHeader}>\r\n                    <Text style={Style.viewHeaderTxt}>Tela de visualização</Text>\r\n                    \r\n                    <TouchableOpacity style={Style.btnLogout}>\r\n                        <Ionicons name=\"log-out-outline\" size={25} style={Style.logoutIcon}/>\r\n                    </TouchableOpacity>\r\n                \r\n                </View>\r\n    \r\n                <View style={Style.backgroundView}>\r\n    \r\n                   <View style={Style.scrollViewContainer}>\r\n                       <ScrollView style={Style.scrollView}>\r\n                        {\r\n                            user.map((val)=>{\r\n                                \r\n                                return(\r\n                                    <TouchableOpacity onPress={()=> gotoEdit(val.id)} key={val.id} style={Style.scrollViewCell}>\r\n                                        <Text style={Style.scrollViewCellTxt}>{val[\"username\"]}</Text>\r\n                                        <Text style={Style.scrollViewCellTxt}>{val[\"name\"]}</Text>\r\n                                        <Text style={Style.scrollViewCellTxt}>{val[\"password\"]}</Text>\r\n                                    </TouchableOpacity>\r\n                                )\r\n                            \r\n                            })\r\n                        }\r\n    \r\n                       </ScrollView>\r\n                   </View>\r\n    \r\n    \r\n                   \r\n                   \r\n                   <TouchableOpacity style={Style.btnNavigateView}>\r\n                        <Text style={Style.btnNavigateTxt}>Cadastrar usuários</Text>\r\n                    </TouchableOpacity>\r\n                   \r\n    \r\n                </View>\r\n    \r\n                \r\n    \r\n            </View>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <View style={Style.parentView}>\r\n                \r\n                <View style={Style.viewHeader}>\r\n                    <Text style={Style.viewHeaderTxt}> Tela de Edição</Text>\r\n                </View>\r\n\r\n                <View style={Style.backgroundView}>\r\n\r\n                    <View style={Style.userInfo}>\r\n                        \r\n                        {\r\n                            user.map((val)=>{\r\n                                \r\n                                if(val.id == id){\r\n                                    return(\r\n                                        <View style={Style.modalInfoView} key={val.id}>\r\n                                            <Text style={Style.labelModalInfo}> Dados atuais: </Text>\r\n                                            \r\n                                            <Text style={Style.modalInfoViewTxt}>{\"Nome: \" + val[\"name\"]}</Text>\r\n                                            <Text style={Style.modalInfoViewTxt}>{\"Senha: \" + val[\"password\"]}</Text>\r\n                                        </View>\r\n                                    )\r\n                                }  \r\n                            })\r\n                        }\r\n                    \r\n                    </View>\r\n\r\n                </View>\r\n\r\n            </View>\r\n        )\r\n    }\r\n    \r\n    \r\n\r\n}\r\nexport default ViewScreen;"]},"metadata":{},"sourceType":"module"}