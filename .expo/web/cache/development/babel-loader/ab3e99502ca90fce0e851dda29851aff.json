{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\programacao_mobile\\\\app_cadastro\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport database from \"./firebase\";\nimport CadScreen from \"./componentes/CadScreen.js\";\nimport ViewScreen from \"./componentes/ViewScreen.js\";\nimport EditScreen from \"./componentes/EditScreen\";\nimport Style from \"./componentes/style.js\";\nimport img from \"./componentes/firebase.png\";\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentUser = _useState4[0],\n      setCUser = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentPassowrd = _useState6[0],\n      setCPassword = _useState6[1];\n\n  var users = [];\n\n  function getUsers() {\n    var userRef = database.ref('users/');\n    userRef.on('value', function (snapshot) {\n      users = snapshot.val();\n    });\n  }\n\n  getUsers();\n  console.log(users);\n\n  function verifyUser(id, password) {\n    var finded = false;\n    users.map(function (value) {\n      if (id == value[\"username\"] && password == value[\"password\"]) {\n        alert('Bem-vindo, ' + value[\"name\"]);\n        finded = true;\n        setScreen('cad');\n        return;\n      }\n    });\n\n    if (!finded) {\n      alert('Esse usuário não consta em nossos registros!');\n    }\n  }\n\n  var _useState7 = useState('home'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      screen = _useState8[0],\n      setScreen = _useState8[1];\n\n  if (screen == 'home') {\n    return React.createElement(View, {\n      style: Style.parentView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: Style.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: Style.backgroundView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      style: Style.imgStyle,\n      source: img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }), React.createElement(TextInput, {\n      onChangeText: function onChangeText(text) {\n        return setCUser(text);\n      },\n      placeholder: \"Insira seu nome de usu\\xE1rio\",\n      placeholderTextColor: \"#A864A8\",\n      style: Style.inputs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }), React.createElement(TextInput, {\n      onChangeText: function onChangeText(text) {\n        return setCPassword(text);\n      },\n      placeholder: \"Insira sua senha\",\n      placeholderTextColor: \"#A864A8\",\n      style: Style.inputs,\n      secureTextEntry: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return verifyUser(currentUser, currentPassowrd);\n      },\n      style: Style.loginBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: Style.loginBtnTxt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"Log-in\"))));\n  } else if (screen == 'cad') {\n    return React.createElement(CadScreen, {\n      screenHook: setScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    });\n  } else if (screen == 'view') {\n    return React.createElement(ViewScreen, {\n      screenHook: setScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    });\n  }\n}","map":{"version":3,"sources":["D:/programacao_mobile/app_cadastro/App.js"],"names":["React","useState","useEffect","database","CadScreen","ViewScreen","EditScreen","Style","img","App","user","setUser","currentUser","setCUser","currentPassowrd","setCPassword","users","getUsers","userRef","ref","on","snapshot","val","console","log","verifyUser","id","password","finded","map","value","alert","setScreen","screen","parentView","header","backgroundView","imgStyle","text","inputs","loginBtn","loginBtnTxt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Text, View, TouchableOpacity, Image, TextInput } from 'react-native';\n\n//#region EXEMPLO DE LOOPINGS E OBJECTS\n\n\n/*\nconst object = [\n  {\n    name: \"Lyniker\",\n    idade: 18,  \n  },\n  {\n    name: \"Thiago\",\n    idade: 14,  \n  },\n  {\n    name: \"TeXuu\",\n    idade: 25,  \n  },\n];\n\n\n\n\nfunction loop(){\n\n  object.map((valor)=>{\n    return valor.name;\n  })\n\n}\n*/\n\n//#endregion exemplos\n\n// IMPORTANDO COMPONENTES\nimport database from './firebase';\n\nimport CadScreen from './componentes/CadScreen.js';\nimport ViewScreen from './componentes/ViewScreen.js';\nimport EditScreen from './componentes/EditScreen';\nimport Style from './componentes/style.js';\nimport img from './componentes/firebase.png';\n\n// CODIGO\n\nexport default function App() {\n\n  const [user,setUser] = useState([]);\n\n  const [currentUser, setCUser] = useState('');\n  const [currentPassowrd, setCPassword] = useState('');\n\n  // USUARIOS\n\n  var users = [];\n\n  function getUsers () {\n    \n    const userRef = database.ref('users/')\n\n    userRef.on('value', (snapshot) => {\n        // const users = snapshot.numChildren(); para ver quandos childs possui uma tabela    \n        users = snapshot.val();\n    })\n  }\n\n  getUsers();\n  console.log(users);\n\n  \n  function verifyUser(id,password){\n\n    var finded = false;\n\n    users.map((value)=>{\n      if(id == value[\"username\"] && password == value[\"password\"]){\n        alert('Bem-vindo, ' + value[\"name\"]);\n        finded = true;\n        setScreen('cad');\n        return;\n      }\n    })\n    if(!finded){\n      alert('Esse usuário não consta em nossos registros!')\n    } \n\n    \n\n    /*\n    if(password == user[\"password\"] ){\n      alert('A senha é igual');\n    }\n    else{\n      alert(\"ops\")\n    }\n    */\n\n    \n  }\n\n  const [screen, setScreen] = useState('home');\n  \n  if(screen == 'home'){\n\n    return(\n      <View style={Style.parentView}>\n        \n        <View style={Style.header}></View>\n          \n        <View style={Style.backgroundView}>\n          \n          <Image style={Style.imgStyle}source={img}></Image>\n\n          <TextInput onChangeText={(text)=> setCUser(text)} placeholder=\"Insira seu nome de usuário\" placeholderTextColor=\"#A864A8\" style={Style.inputs}/>\n          <TextInput onChangeText={(text)=> setCPassword(text)} placeholder=\"Insira sua senha\" placeholderTextColor=\"#A864A8\" style={Style.inputs} secureTextEntry={true}/>\n\n          <TouchableOpacity onPress={()=> verifyUser(currentUser,currentPassowrd)}style={Style.loginBtn}>\n            <Text style={Style.loginBtnTxt}>Log-in</Text>\n          </TouchableOpacity>\n\n        </View>\n\n      </View>\n\n    );\n  \n  }\n  else if(screen == 'cad'){\n    return(\n     \n        <CadScreen screenHook={setScreen}></CadScreen>\n    )\n  }\n  else if(screen == 'view'){\n\n    return(\n\n      <ViewScreen screenHook={setScreen}></ViewScreen>\n    ) \n  }\n}\n"]},"metadata":{},"sourceType":"module"}