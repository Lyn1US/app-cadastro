{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\programacao_mobile\\\\app_cadastro\\\\componentes\\\\CadScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Style from \"./style\";\nimport database from \"../firebase\";\nimport App, { screen } from \"../App\";\nimport { Ionicons } from '@expo/vector-icons';\n\nfunction CadScreen(_ref) {\n  var screenHook = _ref.screenHook;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newUsername = _useState4[0],\n      setNewUsername = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newPassword = _useState6[0],\n      setNewPassoword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newCEP = _useState8[0],\n      setNewCEP = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      newCity = _useState10[0],\n      setNewCity = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      newUF = _useState12[0],\n      setNewUF = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      newNeighborhood = _useState14[0],\n      setNewNeighborhood = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      newStreet = _useState16[0],\n      setNewStreet = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      newNumber = _useState18[0],\n      setNewNumber = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      newComplement = _useState20[0],\n      setNewComplement = _useState20[1];\n\n  var users = [];\n\n  function getUsers() {\n    var userRef = database.ref('users/');\n    userRef.on('value', function (snapshot) {\n      users = snapshot.val();\n    });\n  }\n\n  getUsers();\n\n  function addUser(username, password, cep, city, uf, neighborhood, street, number, complement) {\n    var idDoc = 0;\n    var exists = false;\n\n    if (username !== '' && password !== '' && cep !== '' && city !== '' && uf !== '' && neighborhood !== '' && street !== '' && number !== '') {\n      users.map(function (user) {\n        if (username === user.username) {\n          exists = true;\n        }\n      });\n\n      if (!exists) {\n        var usersReversed = users.reverse();\n        idDoc = usersReversed[0].id;\n        database.ref('users/' + (idDoc + 1).toString()).set({\n          id: idDoc + 1,\n          username: username,\n          password: password,\n          cep: cep,\n          city: city,\n          uf: uf,\n          neighborhood: neighborhood,\n          street: street,\n          number: number,\n          complement: complement\n        });\n        alert('Usu√°rio cadastrado com sucesso');\n        screenHook('view');\n      }\n    } else {\n      alert('Preencha todos os campos!');\n      screenHook('cad');\n    }\n\n    return;\n  }\n\n  var vjson = {};\n\n  function requisition(cep) {\n    fetch('https://viacep.com.br/ws/' + cep + '/json/').then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      console.log(json);\n      vjson = json;\n      return vjson;\n    });\n  }\n\n  function searchAdress() {\n    console.log(requisition(newCEP));\n  }\n\n  return React.createElement(View, {\n    style: Style.parentView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: Style.cadHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: Style.cadHeaderTxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"tela de cadastro\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return screenHook('home');\n    },\n    style: Style.btnLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    style: Style.logoutIcon,\n    size: 25,\n    name: \"log-out-outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: Style.backgroundView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: Style.scrollViewContainer2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    style: Style.scrollView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: Style.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Nome de usu\\xE1rio:\"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setNewUsername(text);\n    },\n    placeholderTextColor: \"#A864A8\",\n    placeholder: \"Insira seu nome de usu\\xE1rio\",\n    style: Style.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: Style.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Senha:\"), React.createElement(TextInput, {\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setNewPassoword(text);\n    },\n    placeholderTextColor: \"#A864A8\",\n    placeholder: \"Insira sua senha\",\n    style: Style.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: Style.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"CEP:\"), React.createElement(TextInput, {\n    maxLength: 8,\n    onBlur: function onBlur() {\n      return searchAdress();\n    },\n    onChangeText: function onChangeText(text) {\n      return setNewCEP(text);\n    },\n    placeholderTextColor: \"#A864A8\",\n    placeholder: \"Insira seu CEP\",\n    style: Style.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: Style.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Cidade:\"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setNewCity(text);\n    },\n    placeholderTextColor: \"#A864A8\",\n    placeholder: \"Insira sua cidade\",\n    style: Style.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: Style.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"UF:\"), React.createElement(TextInput, {\n    maxLength: 2,\n    onChangeText: function onChangeText(text) {\n      return setNewUF(text);\n    },\n    placeholderTextColor: \"#A864A8\",\n    placeholder: \"Insira sua unidade federal\",\n    style: Style.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: Style.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"Bairro:\"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setNewNeighborhood(text);\n    },\n    placeholderTextColor: \"#A864A8\",\n    placeholder: \"Insira seu bairro\",\n    style: Style.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: Style.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"Rua:\"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setNewStreet(text);\n    },\n    placeholderTextColor: \"#A864A8\",\n    placeholder: \"Insira sua rua\",\n    style: Style.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: Style.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"N\\xB0:\"), React.createElement(TextInput, {\n    keyboardType: 'numeric',\n    onChangeText: function onChangeText(text) {\n      return setNewNumber(text);\n    },\n    placeholderTextColor: \"#A864A8\",\n    placeholder: \"Insira seu n\\xB0\",\n    style: Style.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: Style.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Complemento:\"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setNewComplement(text);\n    },\n    placeholderTextColor: \"#A864A8\",\n    placeholder: \"Insira um complemento\",\n    style: Style.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return addUser(newUsername, newPassword, newCEP, newCity, newUF, newNeighborhood, newStreet, newNumber, newComplement);\n    },\n    style: Style.loginBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: Style.loginBtnTxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"Cadastrar\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return screenHook('view');\n    },\n    style: Style.btnNavigate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: Style.btnNavigateTxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, \"Visualizar usu\\xE1rios\"))));\n}\n\nexport default CadScreen;","map":{"version":3,"sources":["D:/programacao_mobile/app_cadastro/componentes/CadScreen.js"],"names":["React","useState","useEffect","Style","database","App","screen","Ionicons","CadScreen","screenHook","user","setUser","newUsername","setNewUsername","newPassword","setNewPassoword","newCEP","setNewCEP","newCity","setNewCity","newUF","setNewUF","newNeighborhood","setNewNeighborhood","newStreet","setNewStreet","newNumber","setNewNumber","newComplement","setNewComplement","users","getUsers","userRef","ref","on","snapshot","val","addUser","username","password","cep","city","uf","neighborhood","street","number","complement","idDoc","exists","map","usersReversed","reverse","id","toString","set","alert","vjson","requisition","fetch","then","response","json","console","log","searchAdress","parentView","cadHeader","cadHeaderTxt","btnLogout","logoutIcon","backgroundView","scrollViewContainer2","scrollView","inputLabel","text","inputs","loginBtn","loginBtnTxt","btnNavigate","btnNavigateTxt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { View, FlatList, TouchableOpacity, Text, TextInput, ScrollView, Alert} from 'react-native';\r\nimport Style from './style';\r\nimport database from '../firebase';\r\nimport App, {screen} from '../App';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nfunction CadScreen({screenHook}){\r\n\r\n  const [user, setUser] = useState([]);\r\n  \r\n  const [newUsername, setNewUsername] = useState('');\r\n  const [newPassword, setNewPassoword] = useState('');\r\n  const [newCEP, setNewCEP] = useState('');\r\n  const [newCity, setNewCity] = useState('');\r\n  const [newUF,setNewUF] = useState('');\r\n  const [newNeighborhood, setNewNeighborhood] = useState('');\r\n  const [newStreet, setNewStreet] = useState('');\r\n  const [newNumber, setNewNumber] = useState('');\r\n  const [newComplement, setNewComplement] = useState('');\r\n\r\n  var users = [];\r\n  function getUsers () {\r\n    \r\n    const userRef = database.ref('users/')\r\n\r\n    userRef.on('value', (snapshot) => {\r\n        // const users = snapshot.numChildren(); para ver quandos childs possui uma tabela    \r\n        users = snapshot.val();\r\n    })\r\n  }\r\n\r\n  getUsers();\r\n\r\n  function addUser(username,password, cep, city, uf, neighborhood, street, number, complement){\r\n\r\n    var idDoc = 0;\r\n\r\n    \r\n    var exists = false;\r\n\r\n    if(username !== '' && password !== '' && cep !== '' && city !== '' && uf !== ''\r\n    && neighborhood !== '' && street !== '' && number !== ''){\r\n\r\n      users.map((user)=>{\r\n        if(username === user.username){\r\n          exists = true;\r\n        }\r\n      })\r\n\r\n      if(!exists){\r\n\r\n        var usersReversed = users.reverse()\r\n        idDoc = usersReversed[0].id;\r\n\r\n        database.ref('users/' + (idDoc + 1).toString()).set({\r\n          id: (idDoc + 1),\r\n          username: username,\r\n          password: password,\r\n          cep: cep,\r\n          city: city,\r\n          uf: uf,\r\n          neighborhood: neighborhood,\r\n          street: street,\r\n          number: number,\r\n          complement: complement\r\n        })\r\n\r\n        alert('Usu√°rio cadastrado com sucesso')\r\n        screenHook('view')\r\n      }\r\n\r\n    }\r\n    else{\r\n      \r\n      alert('Preencha todos os campos!');\r\n      screenHook('cad')\r\n    }\r\n    \r\n    \r\n    \r\n    return;\r\n\r\n  }\r\n\r\n  //const [json, setJson] = useState([]);\r\n  var vjson = {};\r\n\r\n  function requisition (cep) {\r\n    fetch('https://viacep.com.br/ws/'+ cep +'/json/')\r\n    .then(response => response.json())\r\n    .then(function(json){\r\n      \r\n      //JSON.stringify(json, null, \"\\t\")\r\n      console.log(json);\r\n      //setJson(json);\r\n      vjson = json;\r\n      return vjson;\r\n    });\r\n\r\n  }\r\n\r\n  function searchAdress () {\r\n    \r\n    console.log(requisition(newCEP));\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <View style={Style.parentView}>\r\n    \r\n      <View style={Style.cadHeader}>\r\n        <Text style={Style.cadHeaderTxt}>tela de cadastro</Text>\r\n      \r\n        <TouchableOpacity onPress={()=> screenHook('home')} style={Style.btnLogout}>\r\n          <Ionicons  style={Style.logoutIcon} size={25} name=\"log-out-outline\"/>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={Style.backgroundView}>\r\n\r\n        <View style={Style.scrollViewContainer2}>\r\n          <ScrollView style={Style.scrollView}>\r\n          \r\n            <Text style={Style.inputLabel}>Nome de usu√°rio:</Text>\r\n            <TextInput  onChangeText={(text)=>setNewUsername(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira seu nome de usu√°rio\" style={Style.inputs}/>\r\n            \r\n            <Text style={Style.inputLabel}>Senha:</Text>\r\n            <TextInput secureTextEntry={true} onChangeText={(text)=>setNewPassoword(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira sua senha\" style={Style.inputs}/>\r\n          \r\n\r\n            <Text style={Style.inputLabel}>CEP:</Text>\r\n            <TextInput maxLength={8} onBlur={() => searchAdress()} onChangeText={(text)=>setNewCEP(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira seu CEP\" style={Style.inputs}/>\r\n          \r\n            <Text style={Style.inputLabel}>Cidade:</Text>\r\n            <TextInput  onChangeText={(text)=>setNewCity(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira sua cidade\" style={Style.inputs}/>\r\n          \r\n            <Text style={Style.inputLabel}>UF:</Text>\r\n            <TextInput maxLength={2} onChangeText={(text)=>setNewUF(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira sua unidade federal\" style={Style.inputs}/>\r\n          \r\n            <Text style={Style.inputLabel}>Bairro:</Text>\r\n            <TextInput  onChangeText={(text)=>setNewNeighborhood(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira seu bairro\" style={Style.inputs}/>\r\n          \r\n            <Text style={Style.inputLabel}>Rua:</Text>\r\n            <TextInput  onChangeText={(text)=>setNewStreet(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira sua rua\" style={Style.inputs}/>\r\n          \r\n            <Text style={Style.inputLabel}>N¬∞:</Text>\r\n            <TextInput keyboardType={'numeric'}  onChangeText={(text)=>setNewNumber(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira seu n¬∞\" style={Style.inputs}/>\r\n          \r\n            <Text style={Style.inputLabel}>Complemento:</Text>\r\n            <TextInput  onChangeText={(text)=>setNewComplement(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira um complemento\" style={Style.inputs}/>\r\n\r\n            <View></View>\r\n          </ScrollView>\r\n        </View>\r\n\r\n        <TouchableOpacity onPress={()=> addUser(newUsername,newPassword, newCEP, newCity, newUF, newNeighborhood, newStreet, newNumber, newComplement) }style={Style.loginBtn}>\r\n            <Text style={Style.loginBtnTxt}>Cadastrar</Text>\r\n          </TouchableOpacity>\r\n\r\n        <TouchableOpacity onPress={()=>screenHook('view')} style={Style.btnNavigate}>\r\n          <Text style={Style.btnNavigateTxt}>Visualizar usu√°rios</Text>\r\n        </TouchableOpacity>\r\n\r\n      </View>\r\n\r\n    </View>\r\n  )\r\n}\r\nexport default CadScreen;"]},"metadata":{},"sourceType":"module"}