{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\programacao_mobile\\\\app_cadastro\\\\componentes\\\\CadScreen.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Style from \"./style\";\nimport database from \"../firebase\";\nimport App, { screen } from \"../App\";\nimport { Ionicons } from '@expo/vector-icons';\n\nfunction CadScreen(_ref) {\n  var screenHook = _ref.screenHook;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newUsername = _useState4[0],\n      setNewUsername = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newPassword = _useState6[0],\n      setNewPassoword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newCEP = _useState8[0],\n      setNewCEP = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      newCity = _useState10[0],\n      setNewCity = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      newUF = _useState12[0],\n      setNewUF = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      newNeighborhood = _useState14[0],\n      setNewNeighborhood = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      newStreet = _useState16[0],\n      setNewStreet = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      newNumber = _useState18[0],\n      setNewNumber = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      newComplement = _useState20[0],\n      setNewComplement = _useState20[1];\n\n  var iCidade = useRef(null);\n  var iUF = useRef(null);\n  var iBairro = useRef(null);\n  var iRua = useRef(null);\n  var users = [];\n\n  function getUsers() {\n    var userRef = database.ref('users/');\n    userRef.on('value', function (snapshot) {\n      users = snapshot.val();\n    });\n  }\n\n  getUsers();\n\n  function addUser(username, password, cep, city, uf, neighborhood, street, number, complement) {\n    var idDoc = 0;\n    var exists = false;\n\n    if (username !== '' && password !== '' && cep !== '' && city !== '' && uf !== '' && neighborhood !== '' && street !== '' && number !== '') {\n      users.map(function (user) {\n        if (username === user.username) {\n          exists = true;\n        }\n      });\n\n      if (!exists) {\n        var usersReversed = users.reverse();\n        idDoc = usersReversed[0].id;\n        database.ref('users/' + (idDoc + 1).toString()).set({\n          id: idDoc + 1,\n          username: username,\n          password: password,\n          cep: cep,\n          city: city,\n          uf: uf,\n          neighborhood: neighborhood,\n          street: street,\n          number: number,\n          complement: complement\n        });\n        alert('Usuário cadastrado com sucesso');\n        screenHook('view');\n      }\n    } else {\n      alert('Preencha todos os campos!');\n      screenHook('cad');\n    }\n\n    return;\n  }\n\n  function requisition(cep) {\n    if (cep.length == 8) {\n      fetch('https://viacep.com.br/ws/' + cep + '/json/').then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        console.log(json);\n\n        if (json.erro != true) {\n          alert('aqui');\n          iCidade.current.value = json.localidade;\n          iUF.current.value = json.uf;\n          iBairro.current.value = json.bairro;\n          iRua.current.value = json.logradouro;\n          setNewCity(json.localidade);\n          setNewStreet(json.logradouro);\n          setNewUF(json.uf);\n          setNewNeighborhood(json.bairro);\n        } else {\n          alert(\"Insira um CEP válido\");\n        }\n      });\n    } else {\n      alert(\"Insira um CEP válido\");\n    }\n  }\n\n  return React.createElement(View, {\n    style: Style.parentView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: Style.cadHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: Style.cadHeaderTxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, \"tela de cadastro\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return screenHook('home');\n    },\n    style: Style.btnLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    style: Style.logoutIcon,\n    size: 25,\n    name: \"log-out-outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: Style.backgroundView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: Style.scrollViewContainer2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    style: Style.scrollView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: Style.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Nome de usu\\xE1rio:\"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setNewUsername(text);\n    },\n    placeholderTextColor: \"#A864A8\",\n    placeholder: \"Insira seu nome de usu\\xE1rio\",\n    style: Style.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: Style.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Senha:\"), React.createElement(TextInput, {\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setNewPassoword(text);\n    },\n    placeholderTextColor: \"#A864A8\",\n    placeholder: \"Insira sua senha\",\n    style: Style.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: Style.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"CEP:\"), React.createElement(TextInput, {\n    maxLength: 8,\n    onChangeText: function onChangeText(text) {\n      return setNewCEP(text);\n    },\n    onBlur: function onBlur() {\n      return requisition(newCEP);\n    },\n    placeholderTextColor: \"#A864A8\",\n    placeholder: \"Insira seu CEP\",\n    style: Style.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: Style.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"Cidade:\"), React.createElement(TextInput, {\n    ref: iCidade,\n    onChangeText: function onChangeText(text) {\n      return setNewCity(text);\n    },\n    placeholderTextColor: \"#A864A8\",\n    placeholder: \"Insira sua cidade\",\n    style: Style.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: Style.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"UF:\"), React.createElement(TextInput, {\n    ref: iUF,\n    maxLength: 2,\n    onChangeText: function onChangeText(text) {\n      return setNewUF(text);\n    },\n    placeholderTextColor: \"#A864A8\",\n    placeholder: \"Insira sua unidade federal\",\n    style: Style.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: Style.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, \"Bairro:\"), React.createElement(TextInput, {\n    ref: iBairro,\n    onChangeText: function onChangeText(text) {\n      return setNewNeighborhood(text);\n    },\n    placeholderTextColor: \"#A864A8\",\n    placeholder: \"Insira seu bairro\",\n    style: Style.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: Style.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"Rua:\"), React.createElement(TextInput, {\n    ref: iRua,\n    onChangeText: function onChangeText(text) {\n      return setNewStreet(text);\n    },\n    placeholderTextColor: \"#A864A8\",\n    placeholder: \"Insira sua rua\",\n    style: Style.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: Style.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"N\\xB0:\"), React.createElement(TextInput, {\n    keyboardType: 'numeric',\n    onChangeText: function onChangeText(text) {\n      return setNewNumber(text);\n    },\n    placeholderTextColor: \"#A864A8\",\n    placeholder: \"Insira seu n\\xB0\",\n    style: Style.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: Style.inputLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, \"Complemento:\"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setNewComplement(text);\n    },\n    placeholderTextColor: \"#A864A8\",\n    placeholder: \"Insira um complemento\",\n    style: Style.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return addUser(newUsername, newPassword, newCEP, newCity, newUF, newNeighborhood, newStreet, newNumber, newComplement);\n    },\n    style: Style.loginBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: Style.loginBtnTxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"Cadastrar\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return screenHook('view');\n    },\n    style: Style.btnNavigate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: Style.btnNavigateTxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, \"Visualizar usu\\xE1rios\"))));\n}\n\nexport default CadScreen;","map":{"version":3,"sources":["D:/programacao_mobile/app_cadastro/componentes/CadScreen.js"],"names":["React","useState","useEffect","useRef","Style","database","App","screen","Ionicons","CadScreen","screenHook","user","setUser","newUsername","setNewUsername","newPassword","setNewPassoword","newCEP","setNewCEP","newCity","setNewCity","newUF","setNewUF","newNeighborhood","setNewNeighborhood","newStreet","setNewStreet","newNumber","setNewNumber","newComplement","setNewComplement","iCidade","iUF","iBairro","iRua","users","getUsers","userRef","ref","on","snapshot","val","addUser","username","password","cep","city","uf","neighborhood","street","number","complement","idDoc","exists","map","usersReversed","reverse","id","toString","set","alert","requisition","length","fetch","then","response","json","console","log","erro","current","value","localidade","bairro","logradouro","parentView","cadHeader","cadHeaderTxt","btnLogout","logoutIcon","backgroundView","scrollViewContainer2","scrollView","inputLabel","text","inputs","loginBtn","loginBtnTxt","btnNavigate","btnNavigateTxt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport { View, FlatList, TouchableOpacity, Text, TextInput, ScrollView, Alert} from 'react-native';\r\nimport Style from './style';\r\nimport database from '../firebase';\r\nimport App, {screen} from '../App';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nfunction CadScreen({screenHook}){\r\n\r\n  const [user, setUser] = useState([]);\r\n  \r\n  const [newUsername, setNewUsername] = useState('');\r\n  const [newPassword, setNewPassoword] = useState('');\r\n  const [newCEP, setNewCEP] = useState('');\r\n  const [newCity, setNewCity] = useState('');\r\n  const [newUF,setNewUF] = useState('');\r\n  const [newNeighborhood, setNewNeighborhood] = useState('');\r\n  const [newStreet, setNewStreet] = useState('');\r\n  const [newNumber, setNewNumber] = useState('');\r\n  const [newComplement, setNewComplement] = useState('');\r\n  \r\n  // REFERENCIAS DE COMPONENTES\r\n\r\n  const iCidade = useRef(null);\r\n  const iUF = useRef(null);\r\n  const iBairro = useRef(null);\r\n  const iRua = useRef(null);\r\n  \r\n\r\n  var users = [];\r\n  function getUsers () {\r\n    \r\n    const userRef = database.ref('users/')\r\n\r\n    userRef.on('value', (snapshot) => {\r\n        // const users = snapshot.numChildren(); para ver quandos childs possui uma tabela    \r\n        users = snapshot.val();\r\n    })\r\n  }\r\n\r\n  getUsers();\r\n\r\n  function addUser(username,password, cep, city, uf, neighborhood, street, number, complement){\r\n\r\n    var idDoc = 0;\r\n\r\n    \r\n    var exists = false;\r\n\r\n    if(username !== '' && password !== '' && cep !== '' && city !== '' && uf !== ''\r\n    && neighborhood !== '' && street !== '' && number !== ''){\r\n\r\n      users.map((user)=>{\r\n        if(username === user.username){\r\n          exists = true;\r\n        }\r\n      })\r\n\r\n      if(!exists){\r\n\r\n        var usersReversed = users.reverse()\r\n        idDoc = usersReversed[0].id;\r\n\r\n        database.ref('users/' + (idDoc + 1).toString()).set({\r\n          id: (idDoc + 1),\r\n          username: username,\r\n          password: password,\r\n          cep: cep,\r\n          city: city,\r\n          uf: uf,\r\n          neighborhood: neighborhood,\r\n          street: street,\r\n          number: number,\r\n          complement: complement\r\n        })\r\n\r\n        alert('Usuário cadastrado com sucesso')\r\n        screenHook('view')\r\n      }\r\n\r\n    }\r\n    else{\r\n      \r\n      alert('Preencha todos os campos!');\r\n      screenHook('cad')\r\n    }\r\n    \r\n    \r\n    \r\n    return;\r\n\r\n  }\r\n\r\n  //const [json, setJson] = useState([]);\r\n\r\n\r\n  function requisition (cep) {\r\n    \r\n    if(cep.length == 8){\r\n      fetch('https://viacep.com.br/ws/'+ cep +'/json/')\r\n      .then(response => response.json())\r\n      .then(function(json){\r\n        \r\n        //JSON.stringify(json, null, \"\\t\")\r\n        console.log(json);\r\n        if(json.erro != true){\r\n\r\n          alert('aqui')\r\n\r\n          iCidade.current.value = json.localidade; \r\n          iUF.current.value = json.uf; \r\n          iBairro.current.value = json.bairro; \r\n          iRua.current.value = json.logradouro;\r\n          setNewCity(json.localidade);\r\n          setNewStreet(json.logradouro);\r\n          setNewUF(json.uf);\r\n          setNewNeighborhood(json.bairro);\r\n        }\r\n        else{\r\n          alert(\"Insira um CEP válido\")\r\n        }\r\n      });\r\n    }\r\n    else{\r\n      alert(\"Insira um CEP válido\")\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={Style.parentView}>\r\n    \r\n      <View style={Style.cadHeader}>\r\n        <Text style={Style.cadHeaderTxt}>tela de cadastro</Text>\r\n      \r\n        <TouchableOpacity onPress={()=> screenHook('home')} style={Style.btnLogout}>\r\n          <Ionicons  style={Style.logoutIcon} size={25} name=\"log-out-outline\"/>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={Style.backgroundView}>\r\n\r\n        <View style={Style.scrollViewContainer2}>\r\n          <ScrollView style={Style.scrollView}>\r\n          \r\n            <Text style={Style.inputLabel}>Nome de usuário:</Text>\r\n            <TextInput  onChangeText={(text)=>setNewUsername(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira seu nome de usuário\" style={Style.inputs}/>\r\n            \r\n            <Text style={Style.inputLabel}>Senha:</Text>\r\n            <TextInput secureTextEntry={true} onChangeText={(text)=>setNewPassoword(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira sua senha\" style={Style.inputs}/>\r\n          \r\n\r\n            <Text style={Style.inputLabel}>CEP:</Text>\r\n            <TextInput maxLength={8} onChangeText={(text)=>setNewCEP(text)} onBlur={() => requisition(newCEP)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira seu CEP\" style={Style.inputs}/>\r\n          \r\n            <Text style={Style.inputLabel}>Cidade:</Text>\r\n            <TextInput ref={iCidade} onChangeText={(text)=>setNewCity(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira sua cidade\" style={Style.inputs}/>\r\n          \r\n            <Text style={Style.inputLabel}>UF:</Text>\r\n            <TextInput ref={iUF} maxLength={2} onChangeText={(text)=>setNewUF(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira sua unidade federal\" style={Style.inputs}/>\r\n          \r\n            <Text style={Style.inputLabel}>Bairro:</Text>\r\n            <TextInput ref={iBairro} onChangeText={(text)=>setNewNeighborhood(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira seu bairro\" style={Style.inputs}/>\r\n          \r\n            <Text style={Style.inputLabel}>Rua:</Text>\r\n            <TextInput ref={iRua} onChangeText={(text)=>setNewStreet(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira sua rua\" style={Style.inputs}/>\r\n          \r\n            <Text style={Style.inputLabel}>N°:</Text>\r\n            <TextInput keyboardType={'numeric'}  onChangeText={(text)=>setNewNumber(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira seu n°\" style={Style.inputs}/>\r\n          \r\n            <Text style={Style.inputLabel}>Complemento:</Text>\r\n            <TextInput  onChangeText={(text)=>setNewComplement(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira um complemento\" style={Style.inputs}/>\r\n\r\n            <View></View>\r\n          </ScrollView>\r\n        </View>\r\n\r\n        <TouchableOpacity onPress={()=> addUser(newUsername,newPassword, newCEP, newCity, newUF, newNeighborhood, newStreet, newNumber, newComplement) }style={Style.loginBtn}>\r\n            <Text style={Style.loginBtnTxt}>Cadastrar</Text>\r\n          </TouchableOpacity>\r\n\r\n        <TouchableOpacity onPress={()=>screenHook('view')} style={Style.btnNavigate}>\r\n          <Text style={Style.btnNavigateTxt}>Visualizar usuários</Text>\r\n        </TouchableOpacity>\r\n\r\n      </View>\r\n\r\n    </View>\r\n  )\r\n}\r\nexport default CadScreen;"]},"metadata":{},"sourceType":"module"}