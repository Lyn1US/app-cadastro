{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\programacao_mobile\\\\app_cadastro\\\\componentes\\\\ViewScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Style from \"./style\";\nimport database from \"../firebase\";\nimport App, { screen } from \"../App\";\nimport { Ionicons } from '@expo/vector-icons';\n\nfunction ViewScreen(_ref) {\n  var _this = this;\n\n  var screenHook = _ref.screenHook;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modal = _useState4[0],\n      setModal = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      id = _useState6[0],\n      setId = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newName = _useState8[0],\n      setNewName = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      newPassword = _useState10[0],\n      setNewPassword = _useState10[1];\n\n  function gotoEdit(id) {\n    setId(id);\n    setModal(true);\n  }\n\n  function editUser() {\n    alert('Dados alterados com sucesso, veja na página de visualização!');\n    setModal(false);\n  }\n\n  function deleteUser() {\n    alert('Dados excluídos com sucesso, veja na página de visualização!');\n    setModal(false);\n  }\n\n  if (!modal) {\n    return React.createElement(View, {\n      style: Style.parentView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: Style.viewHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: Style.viewHeaderTxt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, \"Tela de visualiza\\xE7\\xE3o\"), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return screenHook('home');\n      },\n      style: Style.btnLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, React.createElement(Ionicons, {\n      name: \"log-out-outline\",\n      size: 25,\n      style: Style.logoutIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }))), React.createElement(View, {\n      style: Style.backgroundView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: Style.scrollViewContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }\n    }, React.createElement(ScrollView, {\n      style: Style.scrollView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 24\n      }\n    }, user.map(function (val) {\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return gotoEdit(val.id);\n        },\n        key: val.id,\n        style: Style.scrollViewCell,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: Style.scrollViewCellTxt,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 41\n        }\n      }, val[\"username\"]), React.createElement(Text, {\n        style: Style.scrollViewCellTxt,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 41\n        }\n      }, val[\"name\"]), React.createElement(Text, {\n        style: Style.scrollViewCellTxt,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 41\n        }\n      }, val[\"password\"]));\n    }))), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return screenHook('cad');\n      },\n      style: Style.btnNavigateView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 20\n      }\n    }, React.createElement(Text, {\n      style: Style.btnNavigateTxt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, \"Cadastrar usu\\xE1rios\"))));\n  } else {\n    return React.createElement(View, {\n      style: Style.parentView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: Style.viewHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: Style.viewHeaderTxt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \" Tela de Edi\\xE7\\xE3o\")), React.createElement(View, {\n      style: Style.backgroundView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: Style.userInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, user.map(function (val) {\n      if (val.id == id) {\n        return React.createElement(View, {\n          style: Style.modalInfoView,\n          key: val.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 41\n          }\n        }, React.createElement(Text, {\n          style: Style.labelModalInfo,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 45\n          }\n        }, \" Dados atuais: \"), React.createElement(Text, {\n          style: Style.modalInfoViewTxt,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 45\n          }\n        }, \"Nome: \" + val[\"name\"]), React.createElement(Text, {\n          style: Style.modalInfoViewTxt,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 45\n          }\n        }, \"Senha: \" + val[\"password\"]));\n      }\n    })), React.createElement(TextInput, {\n      onChangeText: function onChangeText(text) {\n        return setNewName(text);\n      },\n      placeholderTextColor: \"#A864A8\",\n      placeholder: \"Insira um novo nome\",\n      style: Style.inputs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }), React.createElement(TextInput, {\n      onChangeText: function onChangeText(text) {\n        return setNewPassword(text);\n      },\n      placeholderTextColor: \"#A864A8\",\n      placeholder: \"Insira uma nova senha\",\n      style: Style.inputs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return editUser();\n      },\n      style: Style.loginBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: Style.loginBtnTxt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, \"Alterar\")), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return deleteUser();\n      },\n      style: Style.deleteBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: Style.loginBtnTxt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, \"Deletar\")), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setModal(false);\n      },\n      style: Style.btnNavigateView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: Style.btnNavigateTxt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, \"Cancelar\"))));\n  }\n}\n\nexport default ViewScreen;","map":{"version":3,"sources":["D:/programacao_mobile/app_cadastro/componentes/ViewScreen.js"],"names":["React","useState","useEffect","Style","database","App","screen","Ionicons","ViewScreen","screenHook","user","setUser","modal","setModal","id","setId","newName","setNewName","newPassword","setNewPassword","gotoEdit","editUser","alert","deleteUser","parentView","viewHeader","viewHeaderTxt","btnLogout","logoutIcon","backgroundView","scrollViewContainer","scrollView","map","val","scrollViewCell","scrollViewCellTxt","btnNavigateView","btnNavigateTxt","userInfo","modalInfoView","labelModalInfo","modalInfoViewTxt","text","inputs","loginBtn","loginBtnTxt","deleteBtn"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;;;AAEA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,OAAOC,GAAP,IAAaC,MAAb;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,SAASC,UAAT,OAAiC;AAAA;;AAAA,MAAZC,UAAY,QAAZA,UAAY;;AAE7B,kBAAwBR,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOS,IAAP;AAAA,MAAaC,OAAb;;AAEA,mBAA0BV,QAAQ,CAAC,KAAD,CAAlC;AAAA;AAAA,MAAOW,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAoBZ,QAAQ,CAAC,EAAD,CAA5B;AAAA;AAAA,MAAOa,EAAP;AAAA,MAAWC,KAAX;;AAEA,mBAA6Bd,QAAQ,CAAC,EAAD,CAArC;AAAA;AAAA,MAAOe,OAAP;AAAA,MAAeC,UAAf;;AACA,mBAAsChB,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOiB,WAAP;AAAA,MAAoBC,cAApB;;AAIF,WAASC,QAAT,CAAkBN,EAAlB,EAAqB;AAEnBC,IAAAA,KAAK,CAACD,EAAD,CAAL;AACAD,IAAAA,QAAQ,CAAC,IAAD,CAAR;AAED;;AAED,WAASQ,QAAT,GAAmB;AAEjBC,IAAAA,KAAK,CAAC,8DAAD,CAAL;AACAT,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;;AAEC,WAASU,UAAT,GAAqB;AAEnBD,IAAAA,KAAK,CAAC,8DAAD,CAAL;AACAT,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;;AAEC,MAAG,CAACD,KAAJ,EAAU;AACN,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAET,KAAK,CAACqB,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAErB,KAAK,CAACsB,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEtB,KAAK,CAACuB,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADJ,EAGI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAKjB,UAAU,CAAC,MAAD,CAAf;AAAA,OAA3B;AAAoD,MAAA,KAAK,EAAEN,KAAK,CAACwB,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,iBAAf;AAAiC,MAAA,IAAI,EAAE,EAAvC;AAA2C,MAAA,KAAK,EAAExB,KAAK,CAACyB,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAHJ,CAFJ,EAWI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEzB,KAAK,CAAC0B,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE1B,KAAK,CAAC2B,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE3B,KAAK,CAAC4B,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKrB,IAAI,CAACsB,GAAL,CAAS,UAACC,GAAD,EAAO;AAEZ,aACI,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAKb,QAAQ,CAACa,GAAG,CAACnB,EAAL,CAAb;AAAA,SAA3B;AAAkD,QAAA,GAAG,EAAEmB,GAAG,CAACnB,EAA3D;AAA+D,QAAA,KAAK,EAAEX,KAAK,CAAC+B,cAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE/B,KAAK,CAACgC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCF,GAAG,CAAC,UAAD,CAA1C,CADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE9B,KAAK,CAACgC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCF,GAAG,CAAC,MAAD,CAA1C,CAFJ,EAGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE9B,KAAK,CAACgC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCF,GAAG,CAAC,UAAD,CAA1C,CAHJ,CADJ;AAQH,KAVD,CAFL,CADJ,CAFH,EAqBG,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAIxB,UAAU,CAAC,KAAD,CAAd;AAAA,OAA3B;AAAkD,MAAA,KAAK,EAAEN,KAAK,CAACiC,eAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEjC,KAAK,CAACkC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADL,CArBH,CAXJ,CADJ;AAyCH,GA1CD,MA2CI;AACA,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAElC,KAAK,CAACqB,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAErB,KAAK,CAACsB,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEtB,KAAK,CAACuB,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,CAFJ,EAMI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEvB,KAAK,CAAC0B,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE1B,KAAK,CAACmC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ5B,IAAI,CAACsB,GAAL,CAAS,UAACC,GAAD,EAAO;AAEZ,UAAGA,GAAG,CAACnB,EAAJ,IAAUA,EAAb,EAAgB;AACZ,eAEI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEX,KAAK,CAACoC,aAAnB;AAAkC,UAAA,GAAG,EAAEN,GAAG,CAACnB,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEX,KAAK,CAACqC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAGI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAErC,KAAK,CAACsC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsC,WAAWR,GAAG,CAAC,MAAD,CAApD,CAHJ,EAII,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE9B,KAAK,CAACsC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsC,YAAYR,GAAG,CAAC,UAAD,CAArD,CAJJ,CAFJ;AASH;AACJ,KAbD,CAFR,CAFJ,EAsBI,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,sBAACS,IAAD;AAAA,eAAQzB,UAAU,CAACyB,IAAD,CAAlB;AAAA,OAAzB;AAAmD,MAAA,oBAAoB,EAAC,SAAxE;AAAkF,MAAA,WAAW,EAAC,qBAA9F;AAAoH,MAAA,KAAK,EAAEvC,KAAK,CAACwC,MAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBJ,EAuBI,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,sBAACD,IAAD;AAAA,eAAQvB,cAAc,CAACuB,IAAD,CAAtB;AAAA,OAAzB;AAAuD,MAAA,oBAAoB,EAAC,SAA5E;AAAsF,MAAA,WAAW,EAAC,uBAAlG;AAA0H,MAAA,KAAK,EAAEvC,KAAK,CAACwC,MAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBJ,EAyBI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAKtB,QAAQ,EAAb;AAAA,OAA3B;AAA2C,MAAA,KAAK,EAAElB,KAAK,CAACyC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEzC,KAAK,CAAC0C,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAzBJ,EA6BI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAKtB,UAAU,EAAf;AAAA,OAA3B;AAA6C,MAAA,KAAK,EAAEpB,KAAK,CAAC2C,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE3C,KAAK,CAAC0C,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CA7BJ,EAiCI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAIhC,QAAQ,CAAC,KAAD,CAAZ;AAAA,OAA3B;AAAgD,MAAA,KAAK,EAAEV,KAAK,CAACiC,eAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEjC,KAAK,CAACkC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAjCJ,CANJ,CADJ;AAgDH;AACJ;;AACD,eAAe7B,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {View, Text, Touchable, TouchableOpacity, ScrollView, SafeAreaView, TextInput} from 'react-native';\r\nimport Style from './style';\r\nimport database from '../firebase';\r\nimport App, {screen} from '../App';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nfunction ViewScreen({screenHook}){\r\n\r\n    const [user, setUser] = useState([]);\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const [id, setId] = useState('');\r\n\r\n    const [newName,setNewName] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n  \r\n  \r\n\r\n  function gotoEdit(id){\r\n      \r\n    setId(id);\r\n    setModal(true);\r\n  \r\n  }\r\n\r\n  function editUser(){\r\n    \r\n    alert('Dados alterados com sucesso, veja na página de visualização!')\r\n    setModal(false);\r\n}\r\n\r\n  function deleteUser(){\r\n    \r\n    alert('Dados excluídos com sucesso, veja na página de visualização!')\r\n    setModal(false)\r\n  }\r\n\r\n    if(!modal){\r\n        return(\r\n            <View style={Style.parentView}>\r\n    \r\n                <View style={Style.viewHeader}>\r\n                    <Text style={Style.viewHeaderTxt}>Tela de visualização</Text>\r\n                    \r\n                    <TouchableOpacity onPress={()=> screenHook('home')} style={Style.btnLogout}>\r\n                        <Ionicons name=\"log-out-outline\" size={25} style={Style.logoutIcon}/>\r\n                    </TouchableOpacity>\r\n                \r\n                </View>\r\n    \r\n                <View style={Style.backgroundView}>\r\n    \r\n                   <View style={Style.scrollViewContainer}>\r\n                       <ScrollView style={Style.scrollView}>\r\n                        {\r\n                            user.map((val)=>{\r\n                                \r\n                                return(\r\n                                    <TouchableOpacity onPress={()=> gotoEdit(val.id)} key={val.id} style={Style.scrollViewCell}>\r\n                                        <Text style={Style.scrollViewCellTxt}>{val[\"username\"]}</Text>\r\n                                        <Text style={Style.scrollViewCellTxt}>{val[\"name\"]}</Text>\r\n                                        <Text style={Style.scrollViewCellTxt}>{val[\"password\"]}</Text>\r\n                                    </TouchableOpacity>\r\n                                )\r\n                            \r\n                            })\r\n                        }\r\n    \r\n                       </ScrollView>\r\n                   </View>\r\n    \r\n                   <TouchableOpacity onPress={()=>screenHook('cad')} style={Style.btnNavigateView}>\r\n                        <Text style={Style.btnNavigateTxt}>Cadastrar usuários</Text>\r\n                    </TouchableOpacity>\r\n                   \r\n                </View>\r\n    \r\n            </View>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <View style={Style.parentView}>\r\n                \r\n                <View style={Style.viewHeader}>\r\n                    <Text style={Style.viewHeaderTxt}> Tela de Edição</Text>\r\n                </View>\r\n\r\n                <View style={Style.backgroundView}>\r\n\r\n                    <View style={Style.userInfo}>\r\n                        {\r\n                            user.map((val)=>{\r\n                                \r\n                                if(val.id == id){\r\n                                    return(\r\n                                       \r\n                                        <View style={Style.modalInfoView} key={val.id}>\r\n                                            <Text style={Style.labelModalInfo}> Dados atuais: </Text>\r\n                                            \r\n                                            <Text style={Style.modalInfoViewTxt}>{\"Nome: \" + val[\"name\"]}</Text>\r\n                                            <Text style={Style.modalInfoViewTxt}>{\"Senha: \" + val[\"password\"]}</Text>\r\n                                        </View>\r\n                                    )\r\n                                }  \r\n                            })\r\n                        }\r\n\r\n                    </View>\r\n\r\n                    <TextInput onChangeText={(text)=>setNewName(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira um novo nome\" style={Style.inputs}/>\r\n                    <TextInput onChangeText={(text)=>setNewPassword(text)} placeholderTextColor=\"#A864A8\" placeholder=\"Insira uma nova senha\" style={Style.inputs}/>\r\n\r\n                    <TouchableOpacity onPress={()=> editUser()}style={Style.loginBtn}>\r\n                        <Text style={Style.loginBtnTxt}>Alterar</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity onPress={()=> deleteUser()}style={Style.deleteBtn}>\r\n                        <Text style={Style.loginBtnTxt}>Deletar</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    <TouchableOpacity onPress={()=>setModal(false)} style={Style.btnNavigateView}>\r\n                        <Text style={Style.btnNavigateTxt}>Cancelar</Text>\r\n                    </TouchableOpacity>\r\n                \r\n                </View>\r\n\r\n            </View>\r\n        )\r\n    }\r\n}\r\nexport default ViewScreen;"]},"metadata":{},"sourceType":"module"}