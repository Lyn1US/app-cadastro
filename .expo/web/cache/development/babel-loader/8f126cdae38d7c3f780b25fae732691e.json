{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\programacao_mobile\\\\app_cadastro\\\\componentes\\\\ViewScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport Style from \"./style\";\nimport database from \"../firebase\";\nimport App, { screen } from \"../App\";\nimport { Ionicons } from '@expo/vector-icons';\n\nfunction ViewScreen(_ref) {\n  var _this = this;\n\n  var screenHook = _ref.screenHook;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  useEffect(function () {\n    database.collection(\"users\").onSnapshot(function (query) {\n      var list = [];\n      query.forEach(function (doc) {\n        list.push(_objectSpread(_objectSpread({}, doc.data()), {}, {\n          id: doc.id\n        }));\n      });\n      setUser(list);\n    });\n  }, []);\n\n  function gotoEdit() {}\n\n  return React.createElement(View, {\n    style: Style.parentView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: Style.viewHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: Style.viewHeaderTxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Tela de visualiza\\xE7\\xE3o\"), React.createElement(TouchableOpacity, {\n    style: Style.btnLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, React.createElement(Ionicons, {\n    name: \"log-out-outline\",\n    size: 25,\n    style: Style.logoutIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }))), React.createElement(View, {\n    style: Style.backgroundView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: Style.scrollViewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }\n  }, React.createElement(ScrollView, {\n    style: Style.scrollView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }\n  }, user.map(function (val) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return screenHook('edit');\n      },\n      key: val.id,\n      style: Style.scrollViewCell,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: Style.scrollViewCellTxt,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 37\n      }\n    }, val[\"username\"]), React.createElement(Text, {\n      style: Style.scrollViewCellTxt,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 37\n      }\n    }, val[\"name\"]), React.createElement(Text, {\n      style: Style.scrollViewCellTxt,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 37\n      }\n    }, val[\"password\"]));\n  }))), React.createElement(TouchableOpacity, {\n    style: Style.btnNavigateView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }\n  }, React.createElement(Text, {\n    style: Style.btnNavigateTxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Cadastrar usu\\xE1rios\"))));\n}\n\nexport default ViewScreen;","map":{"version":3,"sources":["D:/programacao_mobile/app_cadastro/componentes/ViewScreen.js"],"names":["React","useState","useEffect","Style","database","App","screen","Ionicons","ViewScreen","screenHook","user","setUser","collection","onSnapshot","query","list","forEach","doc","push","data","id","gotoEdit","parentView","viewHeader","viewHeaderTxt","btnLogout","logoutIcon","backgroundView","scrollViewContainer","scrollView","map","val","scrollViewCell","scrollViewCellTxt","btnNavigateView","btnNavigateTxt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {View, Text, Touchable, TouchableOpacity, ScrollView, useColorScheme} from 'react-native';\r\nimport Style from './style';\r\nimport database from '../firebase';\r\nimport App, {screen} from '../App';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nfunction ViewScreen({screenHook}){\r\n\r\n    const [user, setUser] = useState([]);\r\n  \r\n  useEffect(()=>{\r\n\r\n    database.collection(\"users\").onSnapshot((query)=>{\r\n      const list = [];\r\n\r\n      query.forEach((doc)=>{\r\n        list.push({...doc.data(), id: doc.id});\r\n      })\r\n      setUser(list);\r\n    })\r\n    \r\n  },[])\r\n\r\n  function gotoEdit(){\r\n      \r\n      \r\n  }\r\n    \r\n    return(\r\n        <View style={Style.parentView}>\r\n\r\n            <View style={Style.viewHeader}>\r\n                <Text style={Style.viewHeaderTxt}>Tela de visualização</Text>\r\n                \r\n                <TouchableOpacity style={Style.btnLogout}>\r\n                    <Ionicons name=\"log-out-outline\" size={25} style={Style.logoutIcon}/>\r\n                </TouchableOpacity>\r\n            \r\n            </View>\r\n\r\n            <View style={Style.backgroundView}>\r\n\r\n                \r\n\r\n               <View style={Style.scrollViewContainer}>\r\n                   <ScrollView style={Style.scrollView}>\r\n                    {\r\n                        user.map((val)=>{\r\n                            \r\n                            return(\r\n                                <TouchableOpacity onPress={()=>screenHook('edit')} key={val.id} style={Style.scrollViewCell}>\r\n                                    <Text style={Style.scrollViewCellTxt}>{val[\"username\"]}</Text>\r\n                                    <Text style={Style.scrollViewCellTxt}>{val[\"name\"]}</Text>\r\n                                    <Text style={Style.scrollViewCellTxt}>{val[\"password\"]}</Text>\r\n                                </TouchableOpacity>\r\n                            )\r\n                        \r\n                        })\r\n                    }\r\n\r\n                   </ScrollView>\r\n               </View>\r\n               \r\n               <TouchableOpacity style={Style.btnNavigateView}>\r\n                    <Text style={Style.btnNavigateTxt}>Cadastrar usuários</Text>\r\n                </TouchableOpacity>\r\n               \r\n\r\n            </View>\r\n\r\n            \r\n\r\n        </View>\r\n    )\r\n\r\n}\r\nexport default ViewScreen;"]},"metadata":{},"sourceType":"module"}