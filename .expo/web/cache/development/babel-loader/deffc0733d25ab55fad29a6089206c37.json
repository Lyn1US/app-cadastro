{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\programacao_mobile\\\\app_cadastro\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { render } from 'react-dom';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport database from \"./firebase\";\nimport CadScreen from \"./componentes/functions.js\";\nimport Style from \"./componentes/style.js\";\nimport img from \"./componentes/firebase.png\";\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentPassowrd = _useState4[0],\n      setCPassword = _useState4[1];\n\n  useEffect(function () {\n    database.collection(\"users\").onSnapshot(function (query) {\n      var list = [];\n      query.forEach(function (doc) {\n        list.push(_objectSpread(_objectSpread({}, doc.data()), {}, {\n          id: doc.id\n        }));\n      });\n      setUser(list);\n    });\n  }, []);\n\n  function verifyUser(id) {\n    if (currentPassowrd == user[\"password\"]) {\n      alert('A senha Ã© igual');\n    } else {\n      alert(\"ops\");\n    }\n  }\n\n  var _useState5 = useState('home'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      screen = _useState6[0],\n      setScreen = _useState6[1];\n\n  if (screen == 'home') {\n    return React.createElement(View, {\n      style: Style.parentView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: Style.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: Style.backgroundView,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      style: Style.imgStyle,\n      source: img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }), React.createElement(TextInput, {\n      placeholder: \"Insira seu c\\xF3digo\",\n      placeholderTextColor: \"#A864A8\",\n      style: Style.loginInputs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), React.createElement(TextInput, {\n      onChangeText: function onChangeText(text) {\n        return setCPassword(text);\n      },\n      placeholder: \"Insira sua senha\",\n      placeholderTextColor: \"#A864A8\",\n      style: Style.loginInputs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return verifyUser();\n      },\n      style: Style.loginBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: Style.loginBtnTxt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"Log-in\"))));\n  } else if (screen == 'cad') {\n    return React.createElement(View, {\n      style: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#303030'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: Style.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#303030'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: 'center',\n        fontSize: 17,\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \"CADASTRO\")), React.createElement(CadScreen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }));\n  } else if (screen == 'view') {\n    return React.createElement(View, {\n      style: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#303030'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: Style.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }), React.createElement(View, {\n      style: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#303030'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: 'center',\n        fontSize: 17,\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, \"VISUALIZAR\")), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setScreen('edit');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \" CLIQUE PARA VER MAIS INFORMA\\xC7\\xD5ES\")));\n  } else if (screen == 'edit') {\n    return React.createElement(View, {\n      style: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#303030'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: Style.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#303030'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: 'center',\n        fontSize: 17,\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, \"CADASTRO\")));\n  }\n}","map":{"version":3,"sources":["D:/programacao_mobile/app_cadastro/App.js"],"names":["StatusBar","React","useState","useEffect","render","database","CadScreen","Style","img","App","user","setUser","currentPassowrd","setCPassword","collection","onSnapshot","query","list","forEach","doc","push","data","id","verifyUser","alert","screen","setScreen","parentView","header","backgroundView","imgStyle","loginInputs","text","loginBtn","loginBtnTxt","width","height","backgroundColor","textAlign","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState, useEffect} from 'react';\nimport { render } from 'react-dom';\nimport { Text, View, TouchableOpacity, Image, TextInput } from 'react-native';\n\n//#region EXEMPLO DE LOOPINGS E OBJECTS\n\n\n/*\nconst object = [\n  {\n    name: \"Lyniker\",\n    idade: 18,  \n  },\n  {\n    name: \"Thiago\",\n    idade: 14,  \n  },\n  {\n    name: \"TeXuu\",\n    idade: 25,  \n  },\n];\n\n\n\n\nfunction loop(){\n\n  object.map((valor)=>{\n    return valor.name;\n  })\n\n}\n*/\n\n//#endregion exemplos\n\n// IMPORTANDO COMPONENTES\nimport database from './firebase';\n\nimport CadScreen from './componentes/functions.js';\nimport Style from './componentes/style.js';\nimport img from './componentes/firebase.png';\n\n// CODIGO\n\nexport default function App() {\n\n  const [user,setUser] = useState([]);\n\n  const [currentPassowrd, setCPassword] = useState('');\n\n  useEffect(()=>{\n      database.collection(\"users\").onSnapshot((query)=>{\n      \n        const list = [];\n        query.forEach((doc)=>{\n        list.push({...doc.data(), id: doc.id});\n      })\n      setUser(list);\n    })\n\n  },[])\n\n  function verifyUser(id){\n    if(currentPassowrd == user[\"password\"] ){\n      alert('A senha Ã© igual');\n    }\n    else{\n      alert(\"ops\")\n    }\n  }\n\n  const [screen, setScreen] = useState('home');\n\n  if(screen == 'home'){\n\n    return(\n      <View style={Style.parentView}>\n        \n        <View style={Style.header}></View>\n          \n        <View style={Style.backgroundView}>\n          \n          <Image style={Style.imgStyle}source={img}></Image>\n\n          <TextInput placeholder=\"Insira seu cÃ³digo\" placeholderTextColor=\"#A864A8\" style={Style.loginInputs}/>\n          <TextInput onChangeText={(text)=> setCPassword(text)} placeholder=\"Insira sua senha\" placeholderTextColor=\"#A864A8\" style={Style.loginInputs}/>\n\n          <TouchableOpacity onPress={()=> verifyUser()}style={Style.loginBtn}>\n            <Text style={Style.loginBtnTxt}>Log-in</Text>\n          </TouchableOpacity>\n\n        </View>\n\n      </View>\n\n    );\n  \n  }\n  else if(screen == 'cad'){\n    return(\n      <View style={{width: '100%', height: '100%', backgroundColor: '#303030'}}>\n\n        <View style={Style.header}></View>\n          \n          <View style={{width: '100%', height: '100%', backgroundColor: '#303030'}}>\n            <Text style={{textAlign: 'center', fontSize: 17, fontWeight: 'bold'}}>CADASTRO</Text>\n        </View>\n\n\n        <CadScreen></CadScreen>\n\n\n      </View>\n    )\n  }\n  else if(screen == 'view'){\n\n    return(\n\n        <View style={{width: '100%', height: '100%', backgroundColor: '#303030'}}>\n\n          <View style={Style.header}></View>\n          \n          <View style={{width: '100%', height: '100%', backgroundColor: '#303030'}}>\n            <Text style={{textAlign: 'center', fontSize: 17, fontWeight: 'bold'}}>VISUALIZAR</Text>\n          </View>\n\n          <TouchableOpacity onPress={()=> setScreen('edit')}>\n            <Text> CLIQUE PARA VER MAIS INFORMAÃÃES</Text>\n          </TouchableOpacity>\n\n        </View>\n    ) \n  }\n  else if(screen == 'edit'){\n    return(\n      <View style={{width: '100%', height: '100%', backgroundColor: '#303030'}}>\n\n        <View style={Style.header}></View>\n          \n        <View style={{width: '100%', height: '100%', backgroundColor: '#303030'}}>\n            <Text style={{textAlign: 'center', fontSize: 17, fontWeight: 'bold'}}>CADASTRO</Text>\n        </View>\n\n      </View>\n    )\n  }\n\n \n    \n}\n"]},"metadata":{},"sourceType":"module"}